name: Release TypeScript Package

on:
  push:
    branches: [ release ]

permissions:
  contents: write
  packages: write

jobs:
  check-flags:
    runs-on: ubuntu-latest
    outputs:
      skip-tests: ${{ steps.check-commit.outputs.skip-tests }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Check commit flags
        id: check-commit
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Full commit message: $COMMIT_MESSAGE"
          
          # Check for SKIP-TESTS with exact bracket matching
          if echo "$COMMIT_MESSAGE" | grep -q "\[SKIP-TESTS\]"; then
            echo "Found [SKIP-TESTS] tag"
            SKIP_TESTS="true"
          else
            echo "No [SKIP-TESTS] tag found"
            SKIP_TESTS="false"
          fi
          echo "skip-tests=$SKIP_TESTS" >> $GITHUB_OUTPUT
          echo "Final output: skip-tests=$SKIP_TESTS"

  build-and-release:
    needs: [check-flags]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check version availability
      run: |
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        VERSION=$(node -p "require('./package.json').version")
        echo "Checking if version $VERSION exists on npm..."
        
        if npm view $PACKAGE_NAME@$VERSION version 2>/dev/null; then
          echo "Error: Version $VERSION already exists on npm. Please increment the version number."
          exit 1
        else
          echo "Version $VERSION is available for release."
        fi

    - name: Build package
      run: npm run build
    
    - name: Create environment variables
      run: |
        VERSION=$(node -p "require('./package.json').version")
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.PACKAGE_VERSION }}
        name: ${{ env.PACKAGE_NAME }} v${{ env.PACKAGE_VERSION }}
        body: |
          Release version ${{ env.PACKAGE_VERSION }}
          
          npm Package: https://www.npmjs.com/package/${{ env.PACKAGE_NAME }}/v/${{ env.PACKAGE_VERSION }}
        draft: false
        prerelease: false
    
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


